name: infra Provision 

# # Trigger deployment only on push to main branch
# on:
#   workflow_dispatch:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     name: Deploy to EC2 on master branch push
#     runs-on: ubuntu-latest

    # steps:
    #   - name: Checkout the files
    #     uses: actions/checkout@v2

    #   - name: Deploy to Server 1
    #     uses: easingthemes/ssh-deploy@main
    #     env:
    #       SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
    #       REMOTE_HOST: ${{ secrets.HOST_DNS }}
    #       REMOTE_USER: ${{ secrets.USERNAME }}
    #       TARGET: ${{ secrets.TARGET_DIR }}

    #   - name: Executing remote ssh commands using ssh key
    #     uses: appleboy/ssh-action@master
    #     with:
    #       host: ${{ secrets.HOST_DNS }}
    #       username: ${{ secrets.USERNAME }}
    #       key: ${{ secrets.EC2_SSH_KEY }}
    #       script: |
    #         sudo apt-get -y update
    #         sudo apt-get install -y apache2
    #         sudo systemctl start apache2
    #         sudo systemctl enable apache2
    #         cd home
    #         sudo mv /index.html /var/www/html/

    #   - name: Print Name
    #     run: echo "Hello World"
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - pipeline

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  awsRegion: "us-east-1"

jobs:
  infra-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check terraform code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.awsRegion }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          role-duration-seconds: 1200
          role-session-name: MySessionName

      # - name: Configure aws credentials
      #   uses: aws-actions/configure-aws-credentials@v3
      #   with:
      #     role-to-assume: arn:aws:iam::${{ secrets.ADEX_POC}}:role/Github-OIDC-role
      #     role-session-name: OIDCSession
      #     aws-region: ${{ env.awsRegion }}

      - name: Set up terraform
        uses: hashicorp/setup-terraform@v3

      - name: Verify Terraform version
        run: terraform --version

      - name: Install and Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 'pypy3.10'

      - name: Install Boto 3
        run: |
          which python
          source /opt/pipx/venvs/ansible-core/bin/activate
          python3 -m pip install boto3
          python3 -m pip install botocore
        
      - name: Terraform init
        run: |
          terraform -chdir=terraform/ init
      - name: Terraform validate
        run: |
          terraform -chdir=terraform/ validate
      - name: Terraform Plan
        run: |
          terraform -chdir=terraform/ plan
      - name: Terraform apply
        run: |
          terraform -chdir=terraform/ apply --auto-approve
      - name: Wait
        run: |
          sleep 60
          

      - name: Install Ansible
        run: |
            sudo apt update
            sudo apt install -y ansible
  
      
      - name: Ansible Inventory
        run: |
          ansible-inventory -i ansible/aws_ec2.yml --graph

      - name: Run Ansible Playbook
        run: |
            ansible-playbook -vvvv -i ansible/aws_ec2.yml ansible/configure.yml 

        